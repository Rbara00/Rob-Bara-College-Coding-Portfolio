#######################################
Introduction:

This project has to do with efficiently storing and retrieving the names of songs for your next playlist. You will be
comparing the efficiency of a hashed array with that of a hashed binary search tree. You are given a text file with
the names of songs and artists. Your job is simply to load the list into memory, and then go back and search for each
song. You will try this experiment once using a hashed array and once using a hashed binary search tree. Here are the
steps:

#######################################
Steps to be followed:

1. read each song from the file

2. create a hash key using the characters in the song title and/or artist name. This should be helpful to read:
http://www.openbookproject.net/books/pythonds/SortSearch/Hashing.html

3. insert  the song name into the memory structure (either hashed array or a binary search tree) - use a vector to
resolve all collisions

4. Go back to the beginning of the file with the songs in it. For each song in the file, search for it in the data
structure by computing the hash key, going to the corresponding array (or tree) location, and then traversing the
vector (if any) until your song is found. Record how "complicated" it is to find each song as follows: When working
with the hash table, record "1" for how long it takes to find the correct vector (corresponding to the key), plus the
number of traversals within the vector to find your song. When working with the binary search tree, count how many tree
nodes have to be traversed before finding the correct one corresponding to your hash key, plus the number of traversals
within the vector to find your song

For the binary search tree, count the number of nodes in your tree

#######################################
Data File

The data file with the names of the songs is songlist.txt.

#######################################
Comparison

The entire goal of this assignment is to compare the hashed array with the hashed binary search tree. You can compare
these in two ways:

1. which method uses more memory - array size versus tree size
2. which method uses more traversals (on average) to find the song

Make sure to answer both of these questions in the code comments, or somewhere else that's easy for me to find

#######################################
Helpful Note

We have already presented code in class for doing hashed arrays and binary search trees. My hope is that you won't have
to write too much new code since you can recycle a lot of what we've already done in class. Also, I've included sample
code for loading the data from file.

#######################################
Finally...

The song list file was generated by randomly mixing together the best selling Billboard artists with the top playing
songs on Spotify. Therefore you will see the same song names repeated many times with different artists. There will
definitely be some artist / song names that don't make any sense but it was the easiest way for me to quickly generate
7,000 unique song/artists combinations for this assignment.
