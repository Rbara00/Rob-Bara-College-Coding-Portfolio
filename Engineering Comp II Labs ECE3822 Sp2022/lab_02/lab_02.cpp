/* lab_02.cpp

   Rob Bara
   tuj22026@temple.edu
   1/27/2022
   
   BRIEF DESCRIPTION OF FILE CONTENTS
   This program tests a circular buffer class by inserting a number of elements into the buffer.
   When the buffer exceeds the size of the buffer, it wraps around and rewrites the oldest position.
   The program then calculates the average of a specific buffer point determined by the value passed
   into the function, and the buffer point third up from the passed in value.

   Usage:
   GIVE COMMANDS FOR HOW TO COMPILE AND RUN
   Compiling: make circularBuffer.o  //compiles only the circular buffer class
              make lab_02.o         //compiles this driver file
              make all              //compiles all files and makes an executable
   Running:   ./lab_02 (argument)   //argument can be 0,1, or 2 and corresponds to the
                                      testcases in this driver program
*/

// DO NOT EDIT THIS FILE EXCEPT FOR COMMENTING THE BLOCK ABOVE

#include<iostream>
#include<cassert>
#include<algorithm>
using namespace std;

#include "circularBuffer.h"

void testcase_0(){
    circularBuffer buffer(4);
    buffer.insert(4);
    buffer.insert(2); //[3]
    buffer.insert(5); //[2]
    buffer.insert(1); //[1]
    buffer.insert(7); //[0]

    cout << "\n\n******* TESTCASE 0 *******" << endl;
    cout << "The circular average relative to position 0 (the newest data point) is " << buffer.getAverage(0) << endl;
    cout << "Expected answer is (7 + 2) / 2 = 4.5" << endl;

}

void testcase_1(){
    circularBuffer buffer(4);
    buffer.insert(4);
    buffer.insert(9);
    buffer.insert(5); //[3]
    buffer.insert(2); //[2]
    buffer.insert(1); //[1]
    buffer.insert(3); //[0]

    cout << "\n\n******* TESTCASE 1 *******" << endl;
    cout << "The circular average relative to position 1 (the second newest data point) is " << buffer.getAverage(1) << endl;
    cout << "Expected answer is (1+3)/2 = 2.0" << endl;

}

void testcase_2(){
    circularBuffer buffer(7);
    buffer.insert(7);
    buffer.insert(-3); //[6]
    buffer.insert( 2); //[5]
    buffer.insert( 1); //[4]
    buffer.insert( 3); //[3]
    buffer.insert( 4); //[2]
    buffer.insert( 5); //[1]
    buffer.insert( 6); //[0]

    cout << "\n\n******* TESTCASE 2 *******" << endl;
    cout << "The circular average relative to position 4 is " << buffer.getAverage(4) << endl;
    cout << "Expected answer is (1 + 6) / 2 = 3.5" << endl;

}

int main(int argc, char** argv){
    assert(argc==2);
    int opt = stoi(argv[1]);
    
    switch (opt){
    case 0: testcase_0(); break;
    case 1: testcase_1(); break;
    case 2: testcase_2(); break;
    default:
	cout << "error - testcase must be 0, 1, or 2" << endl;
    }

    return 0;
}
